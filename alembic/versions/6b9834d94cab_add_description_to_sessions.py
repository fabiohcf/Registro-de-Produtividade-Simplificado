"""add description to sessions

Revision ID: 6b9834d94cab
Revises: 569c98f08afd
Create Date: 2025-09-10 15:51:58.977308

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6b9834d94cab'
down_revision: Union[str, Sequence[str], None] = '569c98f08afd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('goals', sa.Column('category', sa.String(length=50), nullable=False))
    op.add_column('goals', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('goals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('goals', 'target_hours',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.create_index(op.f('ix_goals_id'), 'goals', ['id'], unique=False)
    op.drop_constraint(op.f('goals_user_id_fkey'), 'goals', type_='foreignkey')
    op.create_foreign_key(None, 'goals', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('goals', 'type')
    op.add_column('sessions', sa.Column('goal_id', sa.Integer(), nullable=True))
    op.add_column('sessions', sa.Column('duration_hours', sa.Float(), nullable=False))
    op.add_column('sessions', sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('sessions', sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.drop_constraint(op.f('sessions_user_id_fkey'), 'sessions', type_='foreignkey')
    op.create_foreign_key(None, 'sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'sessions', 'goals', ['goal_id'], ['id'], ondelete='SET NULL')
    op.drop_column('sessions', 'start_time')
    op.drop_column('sessions', 'end_time')
    op.drop_column('sessions', 'duration')
    op.add_column('users', sa.Column('name', sa.String(length=100), nullable=False))
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_column('users', 'password')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'password_hash')
    op.drop_column('users', 'name')
    op.add_column('sessions', sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('sessions', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('sessions', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'sessions', type_='foreignkey')
    op.drop_constraint(None, 'sessions', type_='foreignkey')
    op.create_foreign_key(op.f('sessions_user_id_fkey'), 'sessions', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('sessions', 'finished_at')
    op.drop_column('sessions', 'started_at')
    op.drop_column('sessions', 'duration_hours')
    op.drop_column('sessions', 'goal_id')
    op.add_column('goals', sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'goals', type_='foreignkey')
    op.create_foreign_key(op.f('goals_user_id_fkey'), 'goals', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_goals_id'), table_name='goals')
    op.alter_column('goals', 'target_hours',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('goals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('goals', 'created_at')
    op.drop_column('goals', 'category')
    # ### end Alembic commands ###
